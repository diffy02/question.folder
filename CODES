# Mengimpor modul yang diperlukan dari PyQt5
from PyQt5.QtCore import Qt  # Qt digunakan untuk pengaturan alignments
from PyQt5.QtWidgets import (QApplication, QWidget, QHBoxLayout, QVBoxLayout, 
                             QGroupBox, QButtonGroup, QRadioButton, QPushButton, QLabel)
from random import randint, shuffle  # shuffle digunakan untuk mengacak urutan jawaban

class Question():
    def __init__ (self, question, right_answer, wrong1, wrong2, wrong3):
        self.question = question
        self.right_answer = right_answer
        self.wrong1 = wrong1
        self.wrong2 = wrong2
        self.wrong3 = wrong3

question_list = []

question_list.append(Question('what is the language of brazil?','portuguese','english','spanish','german'))
question_list.append(Question('what year is it?','2025','2010','2020','1969'))
question_list.append(Question('where is the statue of liberty located at?','America','France','England','Thailand'))

# Membuat aplikasi PyQt5
app = QApplication([])

# Membuat tombol untuk menjawab pertanyaan
btn_OK = QPushButton('Answer') 

# Membuat label untuk menampilkan pertanyaan
lb_Question = QLabel('The most difficult question in the world!')

# Membuat grup box untuk opsi jawaban
RadioGroupBox = QGroupBox("Answer options") 

# Membuat radio button untuk pilihan jawaban
rbtn_1 = QRadioButton('Option 1')
rbtn_2 = QRadioButton('Option 2')
rbtn_3 = QRadioButton('Option 3')
rbtn_4 = QRadioButton('Option 4')

# Mengelompokkan semua radio button agar hanya satu bisa dipilih dalam satu waktu
RadioGroup = QButtonGroup()
RadioGroup.addButton(rbtn_1)
RadioGroup.addButton(rbtn_2)
RadioGroup.addButton(rbtn_3)
RadioGroup.addButton(rbtn_4)

# Membuat layout untuk menampilkan opsi jawaban
layout_ans1 = QHBoxLayout()   # Layout horizontal utama
layout_ans2 = QVBoxLayout()   # Layout vertikal pertama (untuk 2 radio button pertama)
layout_ans3 = QVBoxLayout()   # Layout vertikal kedua (untuk 2 radio button terakhir)

# Menambahkan radio button ke layout vertikal
layout_ans2.addWidget(rbtn_1)
layout_ans2.addWidget(rbtn_2)
layout_ans3.addWidget(rbtn_3) 
layout_ans3.addWidget(rbtn_4)

# Menambahkan layout vertikal ke layout horizontal utama
layout_ans1.addLayout(layout_ans2)
layout_ans1.addLayout(layout_ans3) 

# Mengatur layout untuk grup box jawaban
RadioGroupBox.setLayout(layout_ans1) 

# Membuat grup box untuk menampilkan hasil jawaban
AnsGroupBox = QGroupBox("Test result")

# Membuat label untuk menunjukkan apakah jawaban benar atau salah
lb_Result = QLabel('are you correct or not?')
lb_Correct = QLabel('the answer will be here!')

# Membuat layout untuk tampilan hasil jawaban
layout_res = QVBoxLayout()
layout_res.addWidget(lb_Result, alignment=(Qt.AlignLeft | Qt.AlignTop))
layout_res.addWidget(lb_Correct, alignment=Qt.AlignHCenter, stretch=2)

# Menetapkan layout hasil ke dalam grup box hasil
AnsGroupBox.setLayout(layout_res)

# Membuat layout utama untuk aplikasi
layout_line1 = QHBoxLayout()  # Layout untuk pertanyaan
layout_line2 = QHBoxLayout()  # Layout untuk opsi jawaban dan hasil jawaban
layout_line3 = QHBoxLayout()  # Layout untuk tombol

# Menambahkan label pertanyaan ke layout pertama
layout_line1.addWidget(lb_Question, alignment=(Qt.AlignHCenter | Qt.AlignVCenter))

# Menambahkan grup box jawaban dan hasil ke layout kedua
layout_line2.addWidget(RadioGroupBox)   
layout_line2.addWidget(AnsGroupBox)  

# Menyembunyikan grup box hasil jawaban saat pertama kali aplikasi dijalankan
AnsGroupBox.hide() 

# Menyesuaikan posisi tombol dengan memberi jarak di kiri dan kanan
layout_line3.addStretch(1)
layout_line3.addWidget(btn_OK, stretch=2) 
layout_line3.addStretch(1)

# Membuat layout utama aplikasi
layout_card = QVBoxLayout()

# Menambahkan layout pertanyaan, jawaban, dan tombol ke dalam layout utama
layout_card.addLayout(layout_line1, stretch=2)
layout_card.addLayout(layout_line2, stretch=8)
layout_card.addStretch(1)
layout_card.addLayout(layout_line3, stretch=1)
layout_card.addStretch(1)

# Mengatur jarak antar elemen di layout
layout_card.setSpacing(5)

def show_result():
    RadioGroupBox.hide()
    AnsGroupBox.show()
    btn_OK.setText('Next Question')

def show_question():
    RadioGroupBox.show()
    AnsGroupBox.hide()
    btn_OK.setText('Answer')

    RadioGroup.setExclusive(False)
    rbtn_1.setChecked(False)
    rbtn_2.setChecked(False)
    rbtn_3.setChecked(False)
    rbtn_4.setChecked(False)
    RadioGroup.setExclusive(True)

answers = [rbtn_1, rbtn_2, rbtn_3, rbtn_4]

# def ask(question, right_answer, wrong1, wrong2, wrong3):
#     shuffle(answers)
#     answers[0].setText(right_answer)
#     answers[1].setText(wrong_1)
#     answers[2].setText(wrong_2)
#     answers[3].setText(wrong_3)
#     lb_Question.setText(question)
#     lb_Correct.setText(right_answer)
#     show_question()
def ask(q: Question):
    shuffle(answers)
    answers[0].setText(q.right_answer)
    answers[1].setText(q.wrong1)
    answers[2].setText(q.wrong2)
    answers[3].setText(q.wrong3)
    lb_Question.setText(q.question)
    lb_Correct.setText(q.right_answer)
    show_question()

def show_correct(res):
    lb_Result.setText(res)
    show_result()

def check_answer():
    if answers[0].isChecked():
        show_correct('Correct!')
        window.score += 1
        print('Statistic\n-Total question', window.total, '\n-Right answer:', window.score)
        print('Rating',(window.score/window.total)*100,'%')
    elif answers[1].isChecked() or answers[2].isChecked() or answers[3].isChecked():
        show_correct('Incorrect!')
        print('Statistic\n-Total question', window.total)
        print('Rating',(window.score/window.total)*100,'%')

def next_question():
    window.total += 1
    print('Statistic\n-Total question', window.total, '\n-Right answer:', window.score)
    cur_question = randint(0, len(question_list) - 1)
    q = question_list[cur_question]
    ask(q)
# question = ['pertanyaan' index 0,'pertanyaan2' index 1, 'pertanyaan3' index 2]

def click_OK():
    if btn_OK.text() == 'Answer':
        check_answer()
    else:
        next_question()


# Membuat jendela utama aplikasi
window = QWidget()
window.setLayout(layout_card)  # Menetapkan layout utama ke dalam jendela
window.setWindowTitle('Memo Card')  # Menetapkan judul jendela

btn_OK.clicked.connect(click_OK)

window.score = 0
window.total = 0

next_question()
window.resize(400,300)

# Menampilkan jendela aplikasi
window.show()

# Menjalankan aplikasi PyQt5
app.exec()
